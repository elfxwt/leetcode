class Solution {
	 
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        
		ListNode *result = new ListNode(-1);
		ListNode *p1 = l1,*p2 =l2,*p3 = result;
		int last = 0;
        while(p1&&p2)
        {
			int tSum = p1->val + p2->val + last;
			last = tSum / 10;
			int curValue = tSum % 10;
			
			if(p3->val < 0)  // 头结点要处理，这下明白为什么头结点都是要空的了
				p3->val = curValue;
			else
			{
				ListNode *temp = new ListNode(curValue);
				p3->next = temp;
				p3 = p3->next;
			}

			p1=p1->next;
			p2 = p2->next;
			
		}
		if(p2)
			p1 = p2; // 两个链表不等长的时候
		while(p1)
		{
			int tSum = p1->val + last;
			last = tSum / 10;
			int curValue = tSum % 10;
			ListNode *temp = new ListNode(curValue);
			p3->next = temp;
			p3 = p3->next;
			p1 = p1 ->next;
		}
		if(last != 0)// 当数位相同且有进位的时候要考虑结果增加一位
		{
			ListNode *temp = new ListNode(last);
			p3->next = temp;
			p3 = p3->next;
		}
		return result;
	}
};
        
