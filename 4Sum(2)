//the previous one use iterator to operate the vector ,in this version use index with the same perspective
// the strange is this version is accepted but not the latter one. so the conclusion is iterator has more time.
class Solution {
	vector<vector<int>> results;
public:
    vector<vector<int> > fourSum(vector<int> &num, int target) {
		int len = num.size();
		if(len < 4)
			return results;
		sort(num.begin(),num.end());
		int prei = INT_MAX;
		int prej = INT_MAX; // 是否写个内联或者define 函数来简化去重的过程
		for(int i = 0;i < len -3;i++)
		{	
			if(i != 0 &&num[prei] == num[i])
				continue;
			prei = i;
			for(int j = len - 1;j >= i + 3;j--)
			{
				if(j != len - 1 && num[prej] == num[j])
					continue;
				prej = j;
				int p = i+1;
				int q = j - 1;
				int prep = p;
				int preq = q;
				while(p < q)
				{
				int sum = num[i] + num[j] + num[p] + num[q];
				if(sum == target)
				{
					vector<int> result;
					result.push_back(num[i]);
					result.push_back(num[p]);
					result.push_back(num[q]);
					result.push_back(num[j]);
					p++;
					while(num[prep] == num[p])
						p++;
					prep = p;
					q--;
					while(num[preq] == num[q])
						q--;
					preq = q;
					results.push_back(result);	
				}
				else
					if(sum > target)
					{
						q--;
						while(num[preq] == num[q])
						q--;
						preq = q;
					}
					else{
						p++;
						while(num[prep] == num[p])
						p++;
						prep = p;
					}
				}
			}
		}	
		return results;
    }
};
