class Solution {
	
public:
	ListNode *mergeTwoList(ListNode *l1,ListNode *l2) // 这才注意到返回的是listnode* 地址传值
	{
		ListNode head(-1);
		ListNode *p = &head;
		for(;l1 !=nullptr || l2 !=nullptr;p = p->next)// 条件也有问题，是跟下面的结合在一起的。
		{
			int v1 = l1 == nullptr?INT_MAX:l1->val; // 这里空指针的处理又给忘记了！！
			int v2 = l2 == nullptr?INT_MAX:l2->val;
			if(v1 > v2)
			{
				p->next = l2;
				l2 = l2->next;
			}
			else
			{
				p->next = l1;
				l1 = l1->next;
			}
		}
		return head.next;
	}

    ListNode *mergeKLists(vector<ListNode *> &lists) {
		int len = lists.size();
		if(len == 0)
			return nullptr; // pay attention to this ,return the nullptr is enough
		ListNode *preList = lists[0];
		for(int i = 1;i < len;i++)
			preList = mergeTwoList(preList,lists[i]);
		return preList;
	}

};
