// 没有什么难度，注意细节就好，可能是第一行小于等于和最后一个大于等于

class Solution {
public:
    bool searchMatrix(vector<vector<int> > &matrix, int target) {
		int row = matrix.size();
		if(row ==0)
			return false;
		int col = matrix[0].size()-1;
		int rowSpan=0;
		int searchRow = 0;
		for(int i =0;i < row;i++)
		{
			if(matrix[i][0] <= target)
				rowSpan = i;
			else
				break;
		}
		for(int i = 0;i <= rowSpan;i ++)
		{
			if(matrix[i][col] >= target)
			{
					auto p = find(matrix[i].begin(),matrix[i].end(),target); // 这里可以用binary_search 排序好的用二分查找
					if(p != matrix[i].end())
						return true;
					else
						return false;
	
			}
		}
		return false;
				
    }
};
